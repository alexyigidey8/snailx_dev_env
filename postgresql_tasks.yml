- name: install PostgreSQL
  become: yes
  apt:
    name: [postgresql, postgresql-contrib, libpq-dev, python3-psycopg2, python-psycopg2]
    state: present

- name: Ensure the PostgreSQL service is running
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Create postgres user
  become: yes
  become_user: postgres
  postgresql_user:
    name: "{{ dbuser }}"
    password: "{{ dbpassword }}"
    encrypted: "yes"

- name: Create postgres database
  become_user: postgres
  postgresql_db:
    name: "{{ dbname }}"
    owner: "{{ dbuser }}"

- name: Ensure user has access to database
  become: yes
  become_user: postgres
  postgresql_privs:
    db: "{{ dbname }}"
    role: "{{ dbuser }}"
    objs: ALL_IN_SCHEMA
    privs: ALL

- name: Copy over pg_hba.conf files for allowing outside connections.
  become: yes
  template:
    src: pg_hba.conf
    dest: /etc/postgresql/9.5/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: 0640

- name: Copy over postgresql.conf config files for allowing outside connections.
  become: yes
  template:
    src: postgresql.conf
    dest: /etc/postgresql/9.5/main/postgresql.conf
    owner: postgres
    group: postgres
    mode: 0640

- name: Restart the PostgreSQL service
  service:
    name: postgresql
    state: restarted

- name: Add postgres url env var
  lineinfile:
    path: /etc/environment
    line: "export POSTGRES_URL={{ dburl }}"

- name: Add postgres user env var
  lineinfile:
    path: /etc/environment
    line: "export POSTGRES_USER={{ dbuser }}"

- name: Add postgres db name env var
  lineinfile:
    path: /etc/environment
    line: "export POSTGRES_DB={{ dbname }}"

- name: Add postgres pw env var
  lineinfile:
    path: /etc/environment
    line: "export POSTGRES_PW={{ dbpassword }}"
